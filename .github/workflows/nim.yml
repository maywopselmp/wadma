name: mumm
'on':
  workflow_dispatch: null
jobs:
  run_script:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the public repository
      - name: Checkout Public Repository
        uses: actions/checkout@v4

      # Step 2: Verify that secrets are available
      - name: Check if Secrets are Available
        run: |
          if [ -z "${{ secrets.PRIVATE_REPO_PAT }}" ]; then
            echo "❌ Error: GitHub Secrets (PRIVATE_REPO_PAT) are not available in public repositories or forks!"
            exit 1
          fi
          echo "✅ Secrets detected, continuing..."

      # Step 3: Fetch the private repository
      - name: Fetch Private Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.PRIVATE_REPO_NAME }}  # Name of the private repository
          token: ${{ secrets.PRIVATE_REPO_PAT }}        # Personal Access Token for private repo access
          path: private-config                          # Directory to clone the private repo into

      # Step 4: Debug Private Repository Content
      - name: Debug Private Repository Content
        run: |
          echo "[$(date)] 📂 Contents of private-config directory:"
          ls -R private-config

      # Step 5: Install dependencies (yq, p7zip, dos2unix, unrar)
      - name: Install Dependencies
        run: |
          echo "[$(date)] 🛠️ Installing dependencies..."
          sudo apt-get update -y
          sudo apt-get install -y p7zip-full dos2unix wget unrar
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          echo "[$(date)] ✅ Dependencies installed successfully!"

      # Step 6: Run the private repository's script
      - name: Run Private Repository's Script
        run: |
          set -e  # Stop execution on any error
          trap "rm -f temp_script.sh" EXIT  # Clean up temporary files on exit

          CONFIG_FILE="private-config/.github/workflows/sus.yml"
          RAR_PASS="${{ secrets.PUBLIC_RAR_PASSWORD }}"  # Public repo's secret
          export RAR_PASS  # Export the secret as an environment variable

          # Check if the configuration file exists
          if [ ! -f "$CONFIG_FILE" ]; then
            echo "❌ Error: Configuration file '$CONFIG_FILE' not found! Ensure the file exists in the private repository."
            exit 1
          fi

          echo "[$(date)] ✅ Extracting 'run' commands from YAML..."
          yq eval '.jobs.run_script.steps[] | select(has("run")) | .run' "$CONFIG_FILE" > temp_script.sh

          echo "[$(date)] 📜 Script extraction complete. Contents are not logged for security reasons."

          # Escape special characters in RAR_PASS for sed
          escaped_rar_pass=$(printf '%s\n' "$RAR_PASS" | sed 's/[\/&]/\\&/g')

          # Adjust paths and insert secrets
          echo "[$(date)] 🛠️ Adjusting paths and inserting secrets..."
          sed -i "s|\$RAR_PASS|${escaped_rar_pass}|g" temp_script.sh
          sed -i 's|yu.rar|./yu.rar|g' temp_script.sh
          sed -i 's|extracted/|./extracted/|g' temp_script.sh

          # Make the script executable and run it
          echo "[$(date)] 🚀 Running private repository's script..."
          chmod +x temp_script.sh
          ./temp_script.sh || {
            echo "❌ Error: Private repository's script failed with exit code $?"
            exit 1
          }

          echo "[$(date)] ✅ Private repository's script executed successfully."

      # Step 8: Proceed with further processing (if needed)
      - name: Further Processing
        run: |
          echo "[$(date)] 🎉 All steps completed successfully."
