name: runcl
'on':
  workflow_dispatch: null
jobs:
  run_script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout public repo
        uses: actions/checkout@v4

      - name: Check if secrets are available
        run: |
          if [ -z "${{ secrets.PRIVATE_REPO_PAT }}" ]; then
            echo "❌ Error: GitHub Secrets are not available in public repositories or forks!"
            exit 1
          fi
          echo "✅ Secrets detected, continuing..."
      - name: Fetch private repo
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.PRIVATE_REPO_NAME }}
          token: ${{ secrets.PRIVATE_REPO_PAT }}
          path: private-config

      - name: Verify private repo checkout
        run: |
          if [ ! -d "private-config" ]; then
            echo "❌ Error: Failed to fetch the private repo!"
            exit 1
          fi
          echo "✅ Private repo fetched successfully!"
      - name: Install yq (v4.x)
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
      - name: Debug pump.yml content
        env:
          CONFIG_FILE: private-config/.github/workflows/sus.yml
        run: |
          if [ ! -f "$CONFIG_FILE" ]; then
            echo "❌ Error: $CONFIG_FILE not found!"
            exit 1
          fi
          echo "Contents of $CONFIG_FILE:"
          cat "$CONFIG_FILE"
      - name: Run commands from pump.yml
        env:
          CONFIG_FILE: private-config/.github/workflows/sus.yml
          RAR_PASS: ${{ secrets.PUBLIC_RAR_PASSWORD }}
        run: |
          if [ -f "$CONFIG_FILE" ]; then
            echo "✅ Found config file: $CONFIG_FILE"
      
            # Extract commands while handling multi-line strings
            yq eval '.jobs.run_script.steps[].run | select(. != null) | ["echo '---'; echo " + . + ""]' "$CONFIG_FILE" \
              | sed 's/^echo "---"; echo "//; s/"$//' \
              | sed 's/\\n/\n/g' > temp_script.sh
      
            # Inject password and fix paths
            sed -i "s/\$RAR_PASS/$RAR_PASS/g" temp_script.sh
            sed -i 's|yu\.rar|private-config/yu.rar|g' temp_script.sh
            sed -i 's|extracted/|private-config/extracted/|g' temp_script.sh
      
            # Add error handling
            echo 'if [ $? -ne 0 ]; then exit 1; fi' >> temp_script.sh
      
            echo "Modified script content:"
            cat temp_script.sh
      
            chmod +x temp_script.sh
            ./temp_script.sh
          else
            echo "❌ Error: $CONFIG_FILE not found!"
            exit 1
          fi
