name: runcl

on:
  workflow_dispatch: {}

jobs:
  run_script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout public repo
        uses: actions/checkout@v4

      - name: Check if secrets are available
        run: |
          if [ -z "${{ secrets.PRIVATE_REPO_PAT }}" ]; then
            echo "❌ Error: GitHub Secrets are not available in public repositories or forks!"
            exit 1
          fi
          echo "✅ Secrets detected, continuing..."

      - name: Fetch private repo
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.PRIVATE_REPO_NAME }}
          token: ${{ secrets.PRIVATE_REPO_PAT }}
          path: private-config

      - name: Verify private repo checkout
        run: |
          if [ ! -d "private-config" ]; then
            echo "❌ Error: Failed to fetch the private repo!"
            exit 1
          fi
          echo "✅ Private repo fetched successfully!"

      - name: Install yq (v4.x) and dependencies
        run: |
          # Install yq
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          # Install dependencies needed by the extracted script
          sudo apt-get update -y
          sudo apt-get install -y p7zip-full dos2unix

      - name: Debug pump.yml content
        env:
          CONFIG_FILE: private-config/.github/workflows/sus.yml
        run: |
          if [ ! -f "$CONFIG_FILE" ]; then
            echo "❌ Error: $CONFIG_FILE not found!"
            exit 1
          fi
          echo "Contents of $CONFIG_FILE:"
          cat "$CONFIG_FILE"

      - name: Run commands from pump.yml
        env:
          CONFIG_FILE: private-config/.github/workflows/sus.yml
          RAR_PASS: ${{ secrets.PUBLIC_RAR_PASSWORD }}  # Public repo's secret
        run: |
          if [ -f "$CONFIG_FILE" ]; then
            echo "✅ Found config file: $CONFIG_FILE"

            # Extract all 'run' commands:
            # Wrap the results in an array, flatten (if needed), then join with newlines.
            yq eval '[.jobs.run_script.steps[].run] | flatten | join("\n")' "$CONFIG_FILE" > temp_script.sh

            # Debug: show the raw extracted script before modifications
            echo "Raw extracted script:"
            cat temp_script.sh

            # Escape any special characters in RAR_PASS for safe sed replacement
            escaped_rar_pass=$(printf '%s\n' "$RAR_PASS" | sed 's/[\/&]/\\&/g')

            # Inject RAR_PASS and adjust file paths
            sed -i "s|\$RAR_PASS|${escaped_rar_pass}|g" temp_script.sh
            sed -i 's|yu.rar|private-config/yu.rar|g' temp_script.sh
            sed -i 's|extracted/|private-config/extracted/|g' temp_script.sh

            # Debug: Show the modified script content
            echo "Modified script content:"
            cat temp_script.sh

            # Make the script executable and run it
            chmod +x temp_script.sh
            ./temp_script.sh
          else
            echo "❌ Error: $CONFIG_FILE not found!"
            exit 1
          fi
